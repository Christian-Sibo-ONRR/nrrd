version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:12.2.0
    steps:
      - checkout
      - restore_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
      - run:
          name: Install node dependencies
          command: npm install
      - save_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Build gatsby
          command: npm run build
      - run:
          name: Run tests
          command: npm test
      - run:
          name: deploy to cloud.gov
          command: |
            BRANCH=`git rev-parse --abbrev-ref HEAD`
            echo $BRANCH
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb	  
            # Set $CF_USERNAME and $CF_PASSWORD in CircleCI settings.
            # $CF_ORG, $CF_SPACE, and $APP_NAME can also be set in CircleCI settings or hardcoded here.
            cf api https://api.fr.cloud.gov
            cf auth "$CF_USERNAME" "$CF_PASSWORD"
            cf target -o "$CF_ORG" -s "$CF_SPACE"
            cf push $BRANCH -f ./manifest.yml  
  dev:
    docker:
      # This image has the latest cf-cli as well as zero downtime plugins, if needed.
      - image: circleci/node:12.2.0
    steps:
      - checkout
      - restore_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
      - run:
          name: Install node dependencies
          command: npm install
      - save_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Build gatsby
          command: npm run build
      - run:
          name: Run tests
          command: npm test
      - run:
          name: deploy to cloud.gov
          command: |
            pwd && ls -l	
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb	  
            # Set $CF_USERNAME and $CF_PASSWORD in CircleCI settings.
            # $CF_ORG, $CF_SPACE, and $APP_NAME can also be set in CircleCI settings or hardcoded here.
            cf api https://api.fr.cloud.gov
            cf auth "$CF_USERNAME" "$CF_PASSWORD"
            cf target -o "$CF_ORG" -s "$CF_SPACE"
            cf push dev-onrr -f ./manifest.yml
      - run:
          name: clean up
          command: |
            MERGED=`git branch -a --merged  | grep remotes | grep -vw HEAD | grep -vw dev | grep -vw master | cut -d '/' -f 3 `
            for i in $MERGED
            do
            echo $i
            done   
  deploy:
    docker:
      # This image has the latest cf-cli as well as zero downtime plugins, if needed.
      - image: circleci/node:12.2.0
    steps:
      - checkout
      - restore_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
      - run:
          name: Install node dependencies
          command: npm install
      - save_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Build gatsby
          command: npm run build
      - run:
          name: Run tests
          command: npm test

      - run:
          name: deploy to cloud.gov
          command: |
            pwd && ls -l	
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb	  
            # Set $CF_USERNAME and $CF_PASSWORD in CircleCI settings.
            # $CF_ORG, $CF_SPACE, and $APP_NAME can also be set in CircleCI settings or hardcoded here.
            cf api https://api.fr.cloud.gov
            cf auth "$CF_USERNAME" "$CF_PASSWORD"
            cf target -o "$CF_ORG" -s "$CF_SPACE"
            cf push onrr -f ./manifest.yml

workflows:
  test:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
  deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only: master

  dev:
    jobs:
      - dev:
          filters:
            branches:
              only: dev
