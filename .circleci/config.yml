version: 2.1
jobs:
  lighthouse_audit:
    docker:
      # This image has the latest cf-cli as well as zero downtime plugins, if needed.
      - image: circleci/node:12.13.0
    steps:
      - checkout
      - restore_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
      - run:
          name: Install node dependencies
          command: npm install
      - save_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Build gatsby
          command: npm run build
      - run:
          name: Install chrome dependencies
          # Lighthouse requires Node 10 LTS (10.13) or later.
          # get chromium (stable)
          # install lighthouse
          command: |
            curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash - &&\
            sudo apt-get install -y nodejs npm
            apt-get install chromium
            npm i -g lighthouse
      - run: 
          name: Run lighthouse audits
          command: npm test
      - run:
          name: Run test reports
          command: |
            mkdir -p ${TEST_REPORTS}
            echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?><note><pre>" > ${TEST_REPORTS}/preview.test.xml 
            npm test >> ${TEST_REPORTS}/preview.test.xml 2>&1
            echo "<pre></note>"  >> ${TEST_REPORTS}/preview.test.xml
      - store_test_results:
          path: /tmp/test-reports
  
  quick:
    docker:
      # This image has the latest cf-cli as well as zero downtime plugins, if needed.
      - image: circleci/node:12.13.0
    steps:
      - checkout
      - restore_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
      - run:
          name: Install node dependencies
          command: npm install
      - save_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Build gatsby
          command: npm run build
      - run:
          name: quick performance and accessibilty testing
          command: npm test
              
  preview:
    docker:
      - image: circleci/node:12.13.0
    environment:
      TEST_REPORTS: /tmp/test-reports   
    steps:
      - checkout
      - restore_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
      - run:
          name: Install node dependencies
          command: npm install
      - save_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Build gatsby
          command: npm run build
      - run:
          name: deploy preview to cloud.gov
          command: |
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb
            bash .circleci/preview.sh

      # Upload test results
      
      - store_test_results:
          path: /tmp/test-reports
   
  dev:
    docker:
      # This image has the latest cf-cli as well as zero downtime plugins, if needed.
      - image: circleci/node:12.13.0
    steps:
      - checkout
      - restore_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
      - run:
          name: Install node dependencies
          command: npm install
      - save_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Build gatsby
          command: npm run build
      - run:
          name: Run tests
          command: npm test
      - run:
          name: deploy to cloud.gov
          command: |
            pwd && ls -l	
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb	  
            # Set $CF_USERNAME and $CF_PASSWORD in CircleCI settings.
            # $CF_ORG, $CF_SPACE, and $APP_NAME can also be set in CircleCI settings or hardcoded here.
            cf api https://api.fr.cloud.gov
            cf auth "$DEV_CF_USERNAME" "$DEV_CF_PASSWORD"
            cf target -o "$DEV_CF_ORG" -s "$DEV_CF_SPACE"
            cf push dev-nrrd -f ./manifest.yml
      - run:
          name: clean up
          command: |
            which cf
            bash ./.circleci/cleanup.sh

  deploy:
    docker:
      # This image has the latest cf-cli as well as zero downtime plugins, if needed.
      - image: circleci/node:12.13.0
    steps:
      - checkout
      - restore_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
      - run:
          name: Install node dependencies
          command: npm install
      - save_cache:
          key: v3-node-modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Build gatsby
          command: npm run build
      - run:
          name: Run tests
          command: npm test

      - run:
          name: deploy preview to cloud.gov
          command: |
            pwd && ls -l	
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb	  
            # Set $CF_USERNAME and $CF_PASSWORD in CircleCI settings.
            # $CF_ORG, $CF_SPACE, and $APP_NAME can also be set in CircleCI settings or hardcoded here.
            cf api https://api.fr.cloud.gov
            cf auth "$PROD_CF_USERNAME" "$PROD_CF_PASSWORD"
            cf target -o "$PROD_CF_ORG" -s "$PROD_CF_SPACE"
            cf push nrrd -f ./manifest.yml

workflows:
  audits:
    jobs:
      - lighthouse_audit:
          filters:
            branches:
                # only: dev
      - quick:
          filters:
            branches:
              ignore:
                - master
                - dev
          
                
  preview:
    jobs:
      - preview:
          filters:
            branches:
              ignore:
                - master
                - dev
  deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only: master

  dev:
    jobs:
      - dev:
          filters:
            branches:
              only: dev

              
